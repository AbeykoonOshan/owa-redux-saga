"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[126],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,g=d["".concat(c,".").concat(f)]||d[f]||l[f]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3430:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"Using Run Saga",hide_title:!0},c="Connecting Sagas to external Input/Output",u={unversionedId:"advanced/UsingRunSaga",id:"advanced/UsingRunSaga",isDocsHomePage:!1,title:"Using Run Saga",description:"We saw that take Effects are resolved by waiting for actions to be dispatched to the Store. And that put Effects are resolved by dispatching the actions provided as argument.",source:"@site/../docs/advanced/UsingRunSaga.md",sourceDirName:"advanced",slug:"/advanced/UsingRunSaga",permalink:"/docs/advanced/UsingRunSaga",editUrl:"https://github.com/redux-saga/redux-saga/edit/main/docs/../docs/advanced/UsingRunSaga.md",tags:[],version:"current",frontMatter:{title:"Using Run Saga",hide_title:!0},sidebar:"docs",previous:{title:"Testing",permalink:"/docs/advanced/Testing"},next:{title:"Recipes",permalink:"/docs/recipes"}},p=[],l={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connecting-sagas-to-external-inputoutput"},"Connecting Sagas to external Input/Output"),(0,o.kt)("p",null,"We saw that ",(0,o.kt)("inlineCode",{parentName:"p"},"take")," Effects are resolved by waiting for actions to be dispatched to the Store. And that ",(0,o.kt)("inlineCode",{parentName:"p"},"put")," Effects are resolved by dispatching the actions provided as argument."),(0,o.kt)("p",null,"When a Saga is started (either at startup or later dynamically), the middleware automatically connects its ",(0,o.kt)("inlineCode",{parentName:"p"},"take"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"put")," to the store. The 2 Effects can be seen as a sort of Input/Output to the Saga."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"redux-saga")," provides a way to run a Saga outside of the Redux middleware environment and connect it to a custom Input/Output."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { runSaga, stdChannel } from \'redux-saga\'\n\nconst emitter = new EventEmitter()\nconst channel = stdChannel()\nemitter.on("action", channel.put)\n\nconst myIO = {\n  // this will be used to orchestrate take and put Effects\n  channel,\n  // this will be used to resolve put Effects\n  dispatch(output) {\n    emitter.emit("action", output)\n  },\n  // this will be used to resolve select Effects\n  getState() {\n    return state\n  }\n}\n\nrunSaga(\n  myIO,\n  function* saga() { ... },\n)\n')),(0,o.kt)("p",null,"For more info, see the ",(0,o.kt)("a",{parentName:"p",href:"https://redux-saga.js.org/docs/api/index.html##runsagaoptions-saga-args"},"API docs"),", ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/Channels"},"Channels"),", ",(0,o.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/1yq1lx77jq"},"demo")))}d.isMDXComponent=!0}}]);