"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[562],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),h=a,f=d["".concat(s,".").concat(h)]||d[h]||u[h]||i;return n?r.createElement(f,o(o({ref:t},l),{},{components:n})):r.createElement(f,o({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6449:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],c={title:"Dispatching Actions",hide_title:!0},s="Dispatching actions to the store",p={unversionedId:"basics/DispatchingActions",id:"basics/DispatchingActions",isDocsHomePage:!1,title:"Dispatching Actions",description:"Taking the previous example further, let's say that after each save, we want to dispatch some action",source:"@site/../docs/basics/DispatchingActions.md",sourceDirName:"basics",slug:"/basics/DispatchingActions",permalink:"/docs/basics/DispatchingActions",editUrl:"https://github.com/redux-saga/redux-saga/edit/main/docs/../docs/basics/DispatchingActions.md",tags:[],version:"current",frontMatter:{title:"Dispatching Actions",hide_title:!0},sidebar:"docs",previous:{title:"Declarative Effects",permalink:"/docs/basics/DeclarativeEffects"},next:{title:"Effect",permalink:"/docs/basics/Effect"}},l=[],u={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dispatching-actions-to-the-store"},"Dispatching actions to the store"),(0,i.kt)("p",null,"Taking the previous example further, let's say that after each save, we want to dispatch some action\nto notify the Store that the fetch has succeeded (we'll omit the failure case for the moment)."),(0,i.kt)("p",null,"We could pass the Store's ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch")," function to the Generator. Then the\nGenerator could invoke it after receiving the fetch response:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// ...\n\nfunction* fetchProducts(dispatch) {\n  const products = yield call(Api.fetch, '/products')\n  dispatch({ type: 'PRODUCTS_RECEIVED', products })\n}\n")),(0,i.kt)("p",null,"However, this solution has the same drawbacks as invoking functions directly from inside the Generator (as discussed in the previous section). If we want to test that ",(0,i.kt)("inlineCode",{parentName:"p"},"fetchProducts")," performs\nthe dispatch after receiving the AJAX response, we'll need again to mock the ",(0,i.kt)("inlineCode",{parentName:"p"},"dispatch"),"\nfunction."),(0,i.kt)("p",null,"Instead, we need the same declarative solution. Create a plain JavaScript Object to instruct the\nmiddleware that we need to dispatch some action, and let the middleware perform the real\ndispatch. This way we can test the Generator's dispatch in the same way: by inspecting\nthe yielded Effect and making sure it contains the correct instructions."),(0,i.kt)("p",null,"The library provides, for this purpose, another function ",(0,i.kt)("inlineCode",{parentName:"p"},"put")," which creates the dispatch\nEffect."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { call, put } from 'redux-saga/effects'\n// ...\n\nfunction* fetchProducts() {\n  const products = yield call(Api.fetch, '/products')\n  // create and yield a dispatch Effect\n  yield put({ type: 'PRODUCTS_RECEIVED', products })\n}\n")),(0,i.kt)("p",null,"Now, we can test the Generator easily as in the previous section"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { call, put } from 'redux-saga/effects'\nimport Api from '...'\n\nconst iterator = fetchProducts()\n\n// expects a call instruction\nassert.deepEqual(\n  iterator.next().value,\n  call(Api.fetch, '/products'),\n  \"fetchProducts should yield an Effect call(Api.fetch, './products')\"\n)\n\n// create a fake response\nconst products = {}\n\n// expects a dispatch instruction\nassert.deepEqual(\n  iterator.next(products).value,\n  put({ type: 'PRODUCTS_RECEIVED', products }),\n  \"fetchProducts should yield an Effect put({ type: 'PRODUCTS_RECEIVED', products })\"\n)\n")),(0,i.kt)("p",null,"Note how we pass the fake response to the Generator via its ",(0,i.kt)("inlineCode",{parentName:"p"},"next")," method. Outside the\nmiddleware environment, we have total control over the Generator, we can simulate a\nreal environment by mocking results and resuming the Generator with them. Mocking\ndata is a lot easier than mocking functions and spying calls."))}d.isMDXComponent=!0}}]);