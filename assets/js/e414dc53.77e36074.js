"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[920],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),f=s(n),d=r,m=f["".concat(l,".").concat(d)]||f[d]||p[d]||c;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,i=new Array(c);i[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<c;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7321:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var a=n(7462),r=n(3366),c=(n(7294),n(3905)),i=["components"],o={title:"Racing Effects",hide_title:!0},l=void 0,s={unversionedId:"advanced/RacingEffects",id:"advanced/RacingEffects",isDocsHomePage:!1,title:"Racing Effects",description:"Starting a race between multiple Effects",source:"@site/../docs/advanced/RacingEffects.md",sourceDirName:"advanced",slug:"/advanced/RacingEffects",permalink:"/docs/advanced/RacingEffects",editUrl:"https://github.com/redux-saga/redux-saga/edit/main/docs/../docs/advanced/RacingEffects.md",tags:[],version:"current",frontMatter:{title:"Racing Effects",hide_title:!0},sidebar:"docs",previous:{title:"Non-Blocking Calls",permalink:"/docs/advanced/NonBlockingCalls"},next:{title:"Root Saga",permalink:"/docs/advanced/RootSaga"}},u=[{value:"Starting a race between multiple Effects",id:"starting-a-race-between-multiple-effects",children:[],level:2}],p={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,c.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"starting-a-race-between-multiple-effects"},"Starting a race between multiple Effects"),(0,c.kt)("p",null,"Sometimes we start multiple tasks in parallel but we don't want to wait for all of them, we just need\nto get the ",(0,c.kt)("em",{parentName:"p"},"winner"),": the first one that resolves (or rejects). The ",(0,c.kt)("inlineCode",{parentName:"p"},"race")," Effect offers a way of\ntriggering a race between multiple Effects."),(0,c.kt)("p",null,"The following sample shows a task that triggers a remote fetch request, and constrains the response within a\n1 second timeout."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-javascript"},"import { race, call, put, delay } from 'redux-saga/effects'\n\nfunction* fetchPostsWithTimeout() {\n  const {posts, timeout} = yield race({\n    posts: call(fetchApi, '/posts'),\n    timeout: delay(1000)\n  })\n\n  if (posts)\n    yield put({type: 'POSTS_RECEIVED', posts})\n  else\n    yield put({type: 'TIMEOUT_ERROR'})\n}\n")),(0,c.kt)("p",null,"Another useful feature of ",(0,c.kt)("inlineCode",{parentName:"p"},"race")," is that it automatically cancels the loser Effects. For example,\nsuppose we have 2 UI buttons:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"The first starts a task in the background that runs in an endless loop ",(0,c.kt)("inlineCode",{parentName:"p"},"while (true)"),"\n(e.g. syncing some data with the server each x seconds).")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Once the background task is started, we enable a second button which will cancel the task"))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-javascript"},"import { race, take, call } from 'redux-saga/effects'\n\nfunction* backgroundTask() {\n  while (true) { ... }\n}\n\nfunction* watchStartBackgroundTask() {\n  while (true) {\n    yield take('START_BACKGROUND_TASK')\n    yield race({\n      task: call(backgroundTask),\n      cancel: take('CANCEL_TASK')\n    })\n  }\n}\n")),(0,c.kt)("p",null,"In the case a ",(0,c.kt)("inlineCode",{parentName:"p"},"CANCEL_TASK")," action is dispatched, the ",(0,c.kt)("inlineCode",{parentName:"p"},"race")," Effect will automatically cancel\n",(0,c.kt)("inlineCode",{parentName:"p"},"backgroundTask")," by throwing a cancellation error inside it."))}f.isMDXComponent=!0}}]);